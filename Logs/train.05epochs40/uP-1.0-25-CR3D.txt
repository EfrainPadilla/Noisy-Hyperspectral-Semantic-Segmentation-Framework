WARNING:tensorflow:Callbacks method `on_train_batch_end` is slow compared to the batch time (batch time: 0.1193s vs `on_train_batch_end` time: 0.4127s). Check your callbacks.
2021-06-15 15:44:30.133052
SNR= 25dB
Alpha= alpha-1.0
---The HSI selected is: paviaU ---
The shape of the image is: (610, 340, 103)
The shape of the labels is: (610, 340)
Number of classes:  9
Standard Scaler preprocessing method applied
The new shape of the data is:  (207400, 19, 19, 103)
The new shape of the labels is:  (207400,)
The data shape for train is: (2138, 19, 19, 103)
The labels shape for train is: (2138,)
The data shape for test is: (40638, 19, 19, 103)
The labels shape for test is: (40638,)
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv3d (Conv3D)              (None, 15, 15, 80, 32)    19232     
_________________________________________________________________
batch_normalization (BatchNo (None, 15, 15, 80, 32)    128       
_________________________________________________________________
activation (Activation)      (None, 15, 15, 80, 32)    0         
_________________________________________________________________
conv3d_1 (Conv3D)            (None, 11, 11, 65, 64)    819264    
_________________________________________________________________
batch_normalization_1 (Batch (None, 11, 11, 65, 64)    256       
_________________________________________________________________
activation_1 (Activation)    (None, 11, 11, 65, 64)    0         
_________________________________________________________________
max_pooling3d (MaxPooling3D) (None, 5, 5, 65, 64)      0         
_________________________________________________________________
flatten (Flatten)            (None, 104000)            0         
_________________________________________________________________
dense (Dense)                (None, 300)               31200300  
_________________________________________________________________
batch_normalization_2 (Batch (None, 300)               1200      
_________________________________________________________________
activation_2 (Activation)    (None, 300)               0         
_________________________________________________________________
dense_1 (Dense)              (None, 9)                 2709      
=================================================================
Total params: 32,043,089
Trainable params: 32,042,297
Non-trainable params: 792
_________________________________________________________________
Epoch 1/40

Epoch 00001: val_accuracy improved from -inf to 0.26743, saving model to /tmp/best_model.h5
Epoch 2/40

Epoch 00002: val_accuracy improved from 0.26743 to 0.30627, saving model to /tmp/best_model.h5
Epoch 3/40

Epoch 00003: val_accuracy improved from 0.30627 to 0.42391, saving model to /tmp/best_model.h5
Epoch 4/40

Epoch 00004: val_accuracy improved from 0.42391 to 0.51572, saving model to /tmp/best_model.h5
Epoch 5/40

Epoch 00005: val_accuracy improved from 0.51572 to 0.69413, saving model to /tmp/best_model.h5
Epoch 6/40

Epoch 00006: val_accuracy improved from 0.69413 to 0.80051, saving model to /tmp/best_model.h5
Epoch 7/40

Epoch 00007: val_accuracy improved from 0.80051 to 0.88228, saving model to /tmp/best_model.h5
Epoch 8/40

Epoch 00008: val_accuracy improved from 0.88228 to 0.94729, saving model to /tmp/best_model.h5
Epoch 9/40

Epoch 00009: val_accuracy did not improve from 0.94729
Epoch 10/40

Epoch 00010: val_accuracy improved from 0.94729 to 0.96695, saving model to /tmp/best_model.h5
Epoch 11/40

Epoch 00011: val_accuracy did not improve from 0.96695
Epoch 12/40

Epoch 00012: val_accuracy did not improve from 0.96695
Epoch 13/40

Epoch 00013: val_accuracy did not improve from 0.96695
Epoch 14/40

Epoch 00014: val_accuracy improved from 0.96695 to 0.97067, saving model to /tmp/best_model.h5
Epoch 15/40

Epoch 00015: val_accuracy improved from 0.97067 to 0.97320, saving model to /tmp/best_model.h5
Epoch 16/40

Epoch 00016: val_accuracy improved from 0.97320 to 0.97409, saving model to /tmp/best_model.h5
Epoch 17/40

Epoch 00017: val_accuracy did not improve from 0.97409
Epoch 18/40

Epoch 00018: val_accuracy did not improve from 0.97409
Epoch 19/40

Epoch 00019: val_accuracy did not improve from 0.97409
Epoch 20/40

Epoch 00020: val_accuracy did not improve from 0.97409
Epoch 21/40

Epoch 00021: val_accuracy improved from 0.97409 to 0.97938, saving model to /tmp/best_model.h5
Epoch 22/40

Epoch 00022: val_accuracy did not improve from 0.97938
Epoch 23/40

Epoch 00023: val_accuracy improved from 0.97938 to 0.97965, saving model to /tmp/best_model.h5
Epoch 24/40

Epoch 00024: val_accuracy did not improve from 0.97965
Epoch 25/40

Epoch 00025: val_accuracy did not improve from 0.97965
Epoch 26/40

Epoch 00026: val_accuracy improved from 0.97965 to 0.98135, saving model to /tmp/best_model.h5
Epoch 27/40

Epoch 00027: val_accuracy improved from 0.98135 to 0.98482, saving model to /tmp/best_model.h5
Epoch 28/40

Epoch 00028: val_accuracy did not improve from 0.98482
Epoch 29/40

Epoch 00029: val_accuracy improved from 0.98482 to 0.98612, saving model to /tmp/best_model.h5
Epoch 30/40

Epoch 00030: val_accuracy improved from 0.98612 to 0.98703, saving model to /tmp/best_model.h5
Epoch 31/40

Epoch 00031: val_accuracy did not improve from 0.98703
Epoch 32/40

Epoch 00032: val_accuracy did not improve from 0.98703
Epoch 33/40

Epoch 00033: val_accuracy did not improve from 0.98703
Epoch 34/40

Epoch 00034: val_accuracy did not improve from 0.98703
Epoch 35/40

Epoch 00035: val_accuracy did not improve from 0.98703
Epoch 36/40

Epoch 00036: val_accuracy improved from 0.98703 to 0.98740, saving model to /tmp/best_model.h5
Epoch 37/40

Epoch 00037: val_accuracy improved from 0.98740 to 0.98979, saving model to /tmp/best_model.h5
Epoch 38/40

Epoch 00038: val_accuracy did not improve from 0.98979
Epoch 39/40

Epoch 00039: val_accuracy improved from 0.98979 to 0.98984, saving model to /tmp/best_model.h5
Epoch 40/40

Epoch 00040: val_accuracy improved from 0.98984 to 0.99008, saving model to /tmp/best_model.h5
PARAMETERS 32043089

Terminado en 2300.4773309230804 segundos!


Classification report:
              precision    recall  f1-score   support

           0       0.98      0.98      0.98      6299
           1       1.00      1.00      1.00     17717
           2       0.96      0.95      0.96      1994
           3       1.00      0.99      0.99      2911
           4       1.00      1.00      1.00      1278
           5       0.99      0.99      0.99      4778
           6       0.98      0.94      0.96      1263
           7       0.97      0.99      0.98      3498
           8       1.00      1.00      1.00       900

    accuracy                           0.99     40638
   macro avg       0.99      0.98      0.98     40638
weighted avg       0.99      0.99      0.99     40638

Accuracy Score: 0.9900831733845169
Accuracy by each class: [0.983 0.998 0.95  0.989 1.    0.995 0.941 0.991 0.999]
Average accuracy 0.9828800855977637
Cohenâ€™s kappa score:  0.9868581561776248
