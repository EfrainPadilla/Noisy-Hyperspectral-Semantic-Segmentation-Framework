WARNING:tensorflow:Callbacks method `on_train_batch_end` is slow compared to the batch time (batch time: 0.3081s vs `on_train_batch_end` time: 0.9964s). Check your callbacks.
2021-06-12 14:22:13.309896
SNR= -10dB
Alpha= alpha-1.0
---The HSI selected is: indianPines ---
The shape of the image is: (145, 145, 200)
The shape of the labels is: (145, 145)
Number of classes:  16
Standard Scaler preprocessing method applied
The new shape of the data is:  (21025, 19, 19, 200)
The new shape of the labels is:  (21025,)
The data shape for train is: (1024, 19, 19, 200)
The labels shape for train is: (1024,)
The data shape for test is: (9225, 19, 19, 200)
The labels shape for test is: (9225,)
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv3d (Conv3D)              (None, 15, 15, 177, 32)   19232     
_________________________________________________________________
batch_normalization (BatchNo (None, 15, 15, 177, 32)   128       
_________________________________________________________________
activation (Activation)      (None, 15, 15, 177, 32)   0         
_________________________________________________________________
conv3d_1 (Conv3D)            (None, 11, 11, 162, 64)   819264    
_________________________________________________________________
batch_normalization_1 (Batch (None, 11, 11, 162, 64)   256       
_________________________________________________________________
activation_1 (Activation)    (None, 11, 11, 162, 64)   0         
_________________________________________________________________
max_pooling3d (MaxPooling3D) (None, 5, 5, 162, 64)     0         
_________________________________________________________________
flatten (Flatten)            (None, 259200)            0         
_________________________________________________________________
dense (Dense)                (None, 300)               77760300  
_________________________________________________________________
batch_normalization_2 (Batch (None, 300)               1200      
_________________________________________________________________
activation_2 (Activation)    (None, 300)               0         
_________________________________________________________________
dense_1 (Dense)              (None, 16)                4816      
=================================================================
Total params: 78,605,196
Trainable params: 78,604,404
Non-trainable params: 792
_________________________________________________________________
Epoch 1/40

Epoch 00001: val_accuracy improved from -inf to 0.26840, saving model to /tmp/best_model.h5
Epoch 2/40

Epoch 00002: val_accuracy did not improve from 0.26840
Epoch 3/40

Epoch 00003: val_accuracy improved from 0.26840 to 0.32369, saving model to /tmp/best_model.h5
Epoch 4/40

Epoch 00004: val_accuracy improved from 0.32369 to 0.34244, saving model to /tmp/best_model.h5
Epoch 5/40

Epoch 00005: val_accuracy improved from 0.34244 to 0.48271, saving model to /tmp/best_model.h5
Epoch 6/40

Epoch 00006: val_accuracy improved from 0.48271 to 0.52314, saving model to /tmp/best_model.h5
Epoch 7/40

Epoch 00007: val_accuracy improved from 0.52314 to 0.61951, saving model to /tmp/best_model.h5
Epoch 8/40

Epoch 00008: val_accuracy improved from 0.61951 to 0.63306, saving model to /tmp/best_model.h5
Epoch 9/40

Epoch 00009: val_accuracy improved from 0.63306 to 0.67252, saving model to /tmp/best_model.h5
Epoch 10/40

Epoch 00010: val_accuracy improved from 0.67252 to 0.79317, saving model to /tmp/best_model.h5
Epoch 11/40

Epoch 00011: val_accuracy improved from 0.79317 to 0.85669, saving model to /tmp/best_model.h5
Epoch 12/40

Epoch 00012: val_accuracy did not improve from 0.85669
Epoch 13/40

Epoch 00013: val_accuracy improved from 0.85669 to 0.88911, saving model to /tmp/best_model.h5
Epoch 14/40

Epoch 00014: val_accuracy improved from 0.88911 to 0.92737, saving model to /tmp/best_model.h5
Epoch 15/40

Epoch 00015: val_accuracy improved from 0.92737 to 0.93106, saving model to /tmp/best_model.h5
Epoch 16/40

Epoch 00016: val_accuracy improved from 0.93106 to 0.95089, saving model to /tmp/best_model.h5
Epoch 17/40

Epoch 00017: val_accuracy did not improve from 0.95089
Epoch 18/40

Epoch 00018: val_accuracy did not improve from 0.95089
Epoch 19/40

Epoch 00019: val_accuracy did not improve from 0.95089
Epoch 20/40

Epoch 00020: val_accuracy did not improve from 0.95089
Epoch 21/40

Epoch 00021: val_accuracy did not improve from 0.95089
Epoch 22/40

Epoch 00022: val_accuracy improved from 0.95089 to 0.96033, saving model to /tmp/best_model.h5
Epoch 23/40

Epoch 00023: val_accuracy did not improve from 0.96033
Epoch 24/40

Epoch 00024: val_accuracy did not improve from 0.96033
Epoch 25/40

Epoch 00025: val_accuracy did not improve from 0.96033
Epoch 26/40

Epoch 00026: val_accuracy did not improve from 0.96033
Epoch 27/40

Epoch 00027: val_accuracy did not improve from 0.96033
Epoch 28/40

Epoch 00028: val_accuracy did not improve from 0.96033
Epoch 29/40

Epoch 00029: val_accuracy did not improve from 0.96033
Epoch 30/40

Epoch 00030: val_accuracy did not improve from 0.96033
Epoch 31/40

Epoch 00031: val_accuracy did not improve from 0.96033
Epoch 32/40

Epoch 00032: val_accuracy did not improve from 0.96033
Epoch 33/40

Epoch 00033: val_accuracy did not improve from 0.96033
Epoch 34/40

Epoch 00034: val_accuracy improved from 0.96033 to 0.96759, saving model to /tmp/best_model.h5
Epoch 35/40

Epoch 00035: val_accuracy did not improve from 0.96759
Epoch 36/40

Epoch 00036: val_accuracy did not improve from 0.96759
Epoch 37/40

Epoch 00037: val_accuracy improved from 0.96759 to 0.96813, saving model to /tmp/best_model.h5
Epoch 38/40

Epoch 00038: val_accuracy improved from 0.96813 to 0.97095, saving model to /tmp/best_model.h5
Epoch 39/40

Epoch 00039: val_accuracy improved from 0.97095 to 0.97106, saving model to /tmp/best_model.h5
Epoch 40/40

Epoch 00040: val_accuracy did not improve from 0.97106
PARAMETERS 78605196

Terminado en 1707.4286139011383 segundos!


Classification report:
              precision    recall  f1-score   support

           0       0.95      0.90      0.92        41
           1       0.99      0.92      0.96      1285
           2       0.93      0.97      0.95       747
           3       0.93      0.97      0.95       213
           4       0.95      0.97      0.96       435
           5       0.97      1.00      0.99       657
           6       1.00      1.00      1.00        25
           7       0.97      1.00      0.98       430
           8       0.87      0.72      0.79        18
           9       0.99      0.95      0.97       875
          10       0.97      0.98      0.98      2210
          11       0.93      0.97      0.95       534
          12       0.98      0.98      0.98       185
          13       1.00      0.99      0.99      1139
          14       0.95      1.00      0.97       347
          15       0.98      0.98      0.98        84

    accuracy                           0.97      9225
   macro avg       0.96      0.96      0.96      9225
weighted avg       0.97      0.97      0.97      9225

Accuracy Score: 0.9710569105691057
Accuracy by each class: [0.902 0.924 0.972 0.972 0.975 1.    1.    1.    0.722 0.953 0.981 0.968
 0.984 0.985 1.    0.976]
Average accuracy 0.9571362405044148
Cohenâ€™s kappa score:  0.9670284824676584
