WARNING:tensorflow:Callbacks method `on_train_batch_end` is slow compared to the batch time (batch time: 0.3178s vs `on_train_batch_end` time: 0.9949s). Check your callbacks.
2021-06-12 10:58:23.961460
SNR= 25dB
Alpha= alpha-1.0
---The HSI selected is: indianPines ---
The shape of the image is: (145, 145, 200)
The shape of the labels is: (145, 145)
Number of classes:  16
Standard Scaler preprocessing method applied
The new shape of the data is:  (21025, 19, 19, 200)
The new shape of the labels is:  (21025,)
The data shape for train is: (1024, 19, 19, 200)
The labels shape for train is: (1024,)
The data shape for test is: (9225, 19, 19, 200)
The labels shape for test is: (9225,)
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv3d (Conv3D)              (None, 15, 15, 177, 32)   19232     
_________________________________________________________________
batch_normalization (BatchNo (None, 15, 15, 177, 32)   128       
_________________________________________________________________
activation (Activation)      (None, 15, 15, 177, 32)   0         
_________________________________________________________________
conv3d_1 (Conv3D)            (None, 11, 11, 162, 64)   819264    
_________________________________________________________________
batch_normalization_1 (Batch (None, 11, 11, 162, 64)   256       
_________________________________________________________________
activation_1 (Activation)    (None, 11, 11, 162, 64)   0         
_________________________________________________________________
max_pooling3d (MaxPooling3D) (None, 5, 5, 162, 64)     0         
_________________________________________________________________
flatten (Flatten)            (None, 259200)            0         
_________________________________________________________________
dense (Dense)                (None, 300)               77760300  
_________________________________________________________________
batch_normalization_2 (Batch (None, 300)               1200      
_________________________________________________________________
activation_2 (Activation)    (None, 300)               0         
_________________________________________________________________
dense_1 (Dense)              (None, 16)                4816      
=================================================================
Total params: 78,605,196
Trainable params: 78,604,404
Non-trainable params: 792
_________________________________________________________________
Epoch 1/40

Epoch 00001: val_accuracy improved from -inf to 0.36921, saving model to /tmp/best_model.h5
Epoch 2/40

Epoch 00002: val_accuracy did not improve from 0.36921
Epoch 3/40

Epoch 00003: val_accuracy did not improve from 0.36921
Epoch 4/40

Epoch 00004: val_accuracy improved from 0.36921 to 0.40564, saving model to /tmp/best_model.h5
Epoch 5/40

Epoch 00005: val_accuracy did not improve from 0.40564
Epoch 6/40

Epoch 00006: val_accuracy improved from 0.40564 to 0.40748, saving model to /tmp/best_model.h5
Epoch 7/40

Epoch 00007: val_accuracy improved from 0.40748 to 0.45951, saving model to /tmp/best_model.h5
Epoch 8/40

Epoch 00008: val_accuracy did not improve from 0.45951
Epoch 9/40

Epoch 00009: val_accuracy improved from 0.45951 to 0.47556, saving model to /tmp/best_model.h5
Epoch 10/40

Epoch 00010: val_accuracy improved from 0.47556 to 0.51913, saving model to /tmp/best_model.h5
Epoch 11/40

Epoch 00011: val_accuracy improved from 0.51913 to 0.57919, saving model to /tmp/best_model.h5
Epoch 12/40

Epoch 00012: val_accuracy did not improve from 0.57919
Epoch 13/40

Epoch 00013: val_accuracy improved from 0.57919 to 0.61908, saving model to /tmp/best_model.h5
Epoch 14/40

Epoch 00014: val_accuracy improved from 0.61908 to 0.66331, saving model to /tmp/best_model.h5
Epoch 15/40

Epoch 00015: val_accuracy improved from 0.66331 to 0.67176, saving model to /tmp/best_model.h5
Epoch 16/40

Epoch 00016: val_accuracy improved from 0.67176 to 0.82309, saving model to /tmp/best_model.h5
Epoch 17/40

Epoch 00017: val_accuracy improved from 0.82309 to 0.85799, saving model to /tmp/best_model.h5
Epoch 18/40

Epoch 00018: val_accuracy improved from 0.85799 to 0.88813, saving model to /tmp/best_model.h5
Epoch 19/40

Epoch 00019: val_accuracy did not improve from 0.88813
Epoch 20/40

Epoch 00020: val_accuracy did not improve from 0.88813
Epoch 21/40

Epoch 00021: val_accuracy improved from 0.88813 to 0.91653, saving model to /tmp/best_model.h5
Epoch 22/40

Epoch 00022: val_accuracy did not improve from 0.91653
Epoch 23/40

Epoch 00023: val_accuracy improved from 0.91653 to 0.95588, saving model to /tmp/best_model.h5
Epoch 24/40

Epoch 00024: val_accuracy improved from 0.95588 to 0.96141, saving model to /tmp/best_model.h5
Epoch 25/40

Epoch 00025: val_accuracy did not improve from 0.96141
Epoch 26/40

Epoch 00026: val_accuracy did not improve from 0.96141
Epoch 27/40

Epoch 00027: val_accuracy did not improve from 0.96141
Epoch 28/40

Epoch 00028: val_accuracy did not improve from 0.96141
Epoch 29/40

Epoch 00029: val_accuracy did not improve from 0.96141
Epoch 30/40

Epoch 00030: val_accuracy did not improve from 0.96141
Epoch 31/40

Epoch 00031: val_accuracy did not improve from 0.96141
Epoch 32/40

Epoch 00032: val_accuracy did not improve from 0.96141
Epoch 33/40

Epoch 00033: val_accuracy did not improve from 0.96141
Epoch 34/40

Epoch 00034: val_accuracy did not improve from 0.96141
Epoch 35/40

Epoch 00035: val_accuracy did not improve from 0.96141
Epoch 36/40

Epoch 00036: val_accuracy did not improve from 0.96141
Epoch 37/40

Epoch 00037: val_accuracy did not improve from 0.96141
Epoch 38/40

Epoch 00038: val_accuracy did not improve from 0.96141
Epoch 39/40

Epoch 00039: val_accuracy did not improve from 0.96141
Epoch 40/40

Epoch 00040: val_accuracy improved from 0.96141 to 0.96184, saving model to /tmp/best_model.h5
PARAMETERS 78605196

Terminado en 1684.4417905807495 segundos!


Classification report:
              precision    recall  f1-score   support

           0       1.00      0.90      0.95        41
           1       0.93      0.97      0.95      1285
           2       0.99      0.88      0.93       747
           3       0.93      0.81      0.87       213
           4       1.00      0.96      0.98       435
           5       1.00      0.99      1.00       657
           6       1.00      1.00      1.00        25
           7       1.00      0.98      0.99       430
           8       1.00      0.83      0.91        18
           9       0.99      0.91      0.95       875
          10       0.93      1.00      0.96      2210
          11       0.96      0.94      0.95       534
          12       0.97      0.99      0.98       185
          13       0.99      0.99      0.99      1139
          14       0.95      0.97      0.96       347
          15       0.94      0.99      0.97        84

    accuracy                           0.96      9225
   macro avg       0.97      0.94      0.96      9225
weighted avg       0.96      0.96      0.96      9225

Accuracy Score: 0.9618428184281843
Accuracy by each class: [0.902 0.967 0.877 0.812 0.956 0.994 1.    0.981 0.833 0.906 0.999 0.936
 0.995 0.992 0.971 0.988]
Average accuracy 0.9444165965706035
Cohenâ€™s kappa score:  0.9563275528221153
