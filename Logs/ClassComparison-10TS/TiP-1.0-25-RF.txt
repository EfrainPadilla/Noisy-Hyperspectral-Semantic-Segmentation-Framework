2021-08-31 18:00:37.770211
SNR= 25dB
Alpha= alpha-1.0
---The HSI selected is: indianPines ---
The shape of the image is: (145, 145, 200)
The shape of the labels is: (145, 145)
Number of classes:  16
Standard Scaler preprocessing method applied
The new dimensions for the compressed HSI is: (145, 145, 40) obtained by Tucker
The data shape for train is: (1024, 40)
The labels shape for train is: (1024,)
The data shape for test is: (9225, 40)
The labels shape for test is: (9225,)

Terminado en 4.68027663230896 segundos!


Trained!
Classification report:
              precision    recall  f1-score   support

           0       0.67      0.10      0.17        41
           1       0.60      0.68      0.64      1285
           2       0.71      0.47      0.57       747
           3       0.53      0.28      0.37       213
           4       0.82      0.76      0.79       435
           5       0.84      0.89      0.86       657
           6       0.81      0.52      0.63        25
           7       0.87      0.97      0.92       430
           8       0.00      0.00      0.00        18
           9       0.70      0.56      0.62       875
          10       0.64      0.80      0.71      2210
          11       0.49      0.30      0.37       534
          12       0.84      0.96      0.90       185
          13       0.88      0.92      0.90      1139
          14       0.56      0.42      0.48       347
          15       0.97      0.87      0.92        84

    accuracy                           0.71      9225
   macro avg       0.68      0.59      0.62      9225
weighted avg       0.70      0.71      0.69      9225

Accuracy Score: 0.7053658536585365
Accuracy by each class: [0.098 0.682 0.473 0.282 0.756 0.887 0.52  0.972 0.    0.561 0.805 0.298
 0.962 0.917 0.424 0.869]
Average accuracy 0.594058432843335
Cohenâ€™s kappa score:  0.6591231433287561
/home/eapadilla/anaconda3/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
