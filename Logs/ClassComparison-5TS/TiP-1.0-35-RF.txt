2021-09-01 17:18:20.730697
SNR= 35dB
Alpha= alpha-1.0
---The HSI selected is: indianPines ---
The shape of the image is: (145, 145, 200)
The shape of the labels is: (145, 145)
Number of classes:  16
Standard Scaler preprocessing method applied
The new dimensions for the compressed HSI is: (145, 145, 40) obtained by Tucker
The data shape for train is: (512, 40)
The labels shape for train is: (512,)
The data shape for test is: (9737, 40)
The labels shape for test is: (9737,)

Terminado en 2.018026113510132 segundos!


Trained!
Classification report:
              precision    recall  f1-score   support

           0       1.00      0.09      0.17        44
           1       0.58      0.68      0.63      1357
           2       0.60      0.44      0.51       789
           3       0.59      0.18      0.28       225
           4       0.85      0.61      0.71       459
           5       0.76      0.96      0.85       693
           6       0.00      0.00      0.00        27
           7       0.78      0.93      0.85       454
           8       0.00      0.00      0.00        19
           9       0.65      0.62      0.63       923
          10       0.62      0.75      0.68      2332
          11       0.46      0.23      0.31       563
          12       0.81      0.98      0.89       195
          13       0.86      0.94      0.90      1202
          14       0.54      0.26      0.35       367
          15       0.96      0.82      0.88        88

    accuracy                           0.68      9737
   macro avg       0.63      0.53      0.54      9737
weighted avg       0.67      0.68      0.66      9737

Accuracy Score: 0.6790592584985108
Accuracy by each class: [0.091 0.685 0.441 0.182 0.61  0.957 0.    0.934 0.    0.618 0.745 0.229
 0.979 0.938 0.262 0.818]
Average accuracy 0.5305165184522667
Cohenâ€™s kappa score:  0.628899155845396
/home/eapadilla/anaconda3/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
