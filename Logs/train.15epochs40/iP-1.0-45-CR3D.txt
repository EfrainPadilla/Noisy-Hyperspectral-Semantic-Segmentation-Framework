WARNING:tensorflow:Callbacks method `on_train_batch_end` is slow compared to the batch time (batch time: 0.3160s vs `on_train_batch_end` time: 0.9968s). Check your callbacks.
2021-06-09 04:34:01.890365
SNR= 45dB
Alpha= alpha-1.0
---The HSI selected is: indianPines ---
The shape of the image is: (145, 145, 200)
The shape of the labels is: (145, 145)
Number of classes:  16
Standard Scaler preprocessing method applied
The new shape of the data is:  (21025, 19, 19, 200)
The new shape of the labels is:  (21025,)
The data shape for train is: (1537, 19, 19, 200)
The labels shape for train is: (1537,)
The data shape for test is: (8712, 19, 19, 200)
The labels shape for test is: (8712,)
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv3d (Conv3D)              (None, 15, 15, 177, 32)   19232     
_________________________________________________________________
batch_normalization (BatchNo (None, 15, 15, 177, 32)   128       
_________________________________________________________________
activation (Activation)      (None, 15, 15, 177, 32)   0         
_________________________________________________________________
conv3d_1 (Conv3D)            (None, 11, 11, 162, 64)   819264    
_________________________________________________________________
batch_normalization_1 (Batch (None, 11, 11, 162, 64)   256       
_________________________________________________________________
activation_1 (Activation)    (None, 11, 11, 162, 64)   0         
_________________________________________________________________
max_pooling3d (MaxPooling3D) (None, 5, 5, 162, 64)     0         
_________________________________________________________________
flatten (Flatten)            (None, 259200)            0         
_________________________________________________________________
dense (Dense)                (None, 300)               77760300  
_________________________________________________________________
batch_normalization_2 (Batch (None, 300)               1200      
_________________________________________________________________
activation_2 (Activation)    (None, 300)               0         
_________________________________________________________________
dense_1 (Dense)              (None, 16)                4816      
=================================================================
Total params: 78,605,196
Trainable params: 78,604,404
Non-trainable params: 792
_________________________________________________________________
Epoch 1/40

Epoch 00001: val_accuracy improved from -inf to 0.39968, saving model to /tmp/best_model.h5
Epoch 2/40

Epoch 00002: val_accuracy did not improve from 0.39968
Epoch 3/40

Epoch 00003: val_accuracy did not improve from 0.39968
Epoch 4/40

Epoch 00004: val_accuracy did not improve from 0.39968
Epoch 5/40

Epoch 00005: val_accuracy improved from 0.39968 to 0.45110, saving model to /tmp/best_model.h5
Epoch 6/40

Epoch 00006: val_accuracy improved from 0.45110 to 0.51251, saving model to /tmp/best_model.h5
Epoch 7/40

Epoch 00007: val_accuracy improved from 0.51251 to 0.52904, saving model to /tmp/best_model.h5
Epoch 8/40

Epoch 00008: val_accuracy improved from 0.52904 to 0.58471, saving model to /tmp/best_model.h5
Epoch 9/40

Epoch 00009: val_accuracy improved from 0.58471 to 0.61042, saving model to /tmp/best_model.h5
Epoch 10/40

Epoch 00010: val_accuracy improved from 0.61042 to 0.67505, saving model to /tmp/best_model.h5
Epoch 11/40

Epoch 00011: val_accuracy improved from 0.67505 to 0.78329, saving model to /tmp/best_model.h5
Epoch 12/40

Epoch 00012: val_accuracy improved from 0.78329 to 0.82243, saving model to /tmp/best_model.h5
Epoch 13/40

Epoch 00013: val_accuracy improved from 0.82243 to 0.87615, saving model to /tmp/best_model.h5
Epoch 14/40

Epoch 00014: val_accuracy improved from 0.87615 to 0.92539, saving model to /tmp/best_model.h5
Epoch 15/40

Epoch 00015: val_accuracy did not improve from 0.92539
Epoch 16/40

Epoch 00016: val_accuracy improved from 0.92539 to 0.93618, saving model to /tmp/best_model.h5
Epoch 17/40

Epoch 00017: val_accuracy did not improve from 0.93618
Epoch 18/40

Epoch 00018: val_accuracy improved from 0.93618 to 0.95099, saving model to /tmp/best_model.h5
Epoch 19/40

Epoch 00019: val_accuracy improved from 0.95099 to 0.96740, saving model to /tmp/best_model.h5
Epoch 20/40

Epoch 00020: val_accuracy did not improve from 0.96740
Epoch 21/40

Epoch 00021: val_accuracy did not improve from 0.96740
Epoch 22/40

Epoch 00022: val_accuracy improved from 0.96740 to 0.97417, saving model to /tmp/best_model.h5
Epoch 23/40

Epoch 00023: val_accuracy did not improve from 0.97417
Epoch 24/40

Epoch 00024: val_accuracy improved from 0.97417 to 0.97681, saving model to /tmp/best_model.h5
Epoch 25/40

Epoch 00025: val_accuracy improved from 0.97681 to 0.97727, saving model to /tmp/best_model.h5
Epoch 26/40

Epoch 00026: val_accuracy improved from 0.97727 to 0.97796, saving model to /tmp/best_model.h5
Epoch 27/40

Epoch 00027: val_accuracy improved from 0.97796 to 0.97854, saving model to /tmp/best_model.h5
Epoch 28/40

Epoch 00028: val_accuracy did not improve from 0.97854
Epoch 29/40

Epoch 00029: val_accuracy did not improve from 0.97854
Epoch 30/40

Epoch 00030: val_accuracy did not improve from 0.97854
Epoch 31/40

Epoch 00031: val_accuracy improved from 0.97854 to 0.97876, saving model to /tmp/best_model.h5
Epoch 32/40

Epoch 00032: val_accuracy did not improve from 0.97876
Epoch 33/40

Epoch 00033: val_accuracy did not improve from 0.97876
Epoch 34/40

Epoch 00034: val_accuracy did not improve from 0.97876
Epoch 35/40

Epoch 00035: val_accuracy did not improve from 0.97876
Epoch 36/40

Epoch 00036: val_accuracy did not improve from 0.97876
Epoch 37/40

Epoch 00037: val_accuracy did not improve from 0.97876
Epoch 38/40

Epoch 00038: val_accuracy did not improve from 0.97876
Epoch 39/40

Epoch 00039: val_accuracy did not improve from 0.97876
Epoch 40/40

Epoch 00040: val_accuracy did not improve from 0.97876
PARAMETERS 78605196

Terminado en 1911.5973961353302 segundos!


Classification report:
              precision    recall  f1-score   support

           0       1.00      0.92      0.96        39
           1       0.97      0.98      0.97      1214
           2       0.98      0.91      0.95       706
           3       1.00      0.97      0.98       201
           4       0.97      0.99      0.98       411
           5       0.99      0.99      0.99       621
           6       1.00      1.00      1.00        24
           7       1.00      1.00      1.00       406
           8       1.00      0.59      0.74        17
           9       0.99      0.96      0.97       826
          10       0.97      1.00      0.98      2087
          11       0.96      0.98      0.97       504
          12       1.00      0.99      1.00       174
          13       0.99      0.99      0.99      1075
          14       0.98      0.98      0.98       328
          15       0.99      0.96      0.97        79

    accuracy                           0.98      8712
   macro avg       0.99      0.95      0.96      8712
weighted avg       0.98      0.98      0.98      8712

Accuracy Score: 0.9787649219467401
Accuracy by each class: [0.923 0.976 0.914 0.965 0.99  0.987 1.    1.    0.588 0.956 0.999 0.98
 0.994 0.994 0.979 0.962]
Average accuracy 0.9505046471942576
Cohenâ€™s kappa score:  0.9757555004223292
