WARNING:tensorflow:Callbacks method `on_train_batch_end` is slow compared to the batch time (batch time: 0.3067s vs `on_train_batch_end` time: 1.0088s). Check your callbacks.
2021-06-10 02:57:56.244512: W tensorflow/core/framework/cpu_allocator_impl.cc:81] Allocation of 13553441760 exceeds 10% of free system memory.
2021-06-10 05:42:27.920400: W tensorflow/core/framework/cpu_allocator_impl.cc:81] Allocation of 13553441760 exceeds 10% of free system memory.
2021-06-10 02:53:40.629590
SNR= 60dB
Alpha= alpha-1.0
---The HSI selected is: salinas ---
The shape of the image is: (512, 217, 204)
The shape of the labels is: (512, 217)
Number of classes:  16
Standard Scaler preprocessing method applied
The new shape of the data is:  (111104, 19, 19, 204)
The new shape of the labels is:  (111104,)
The data shape for train is: (8119, 19, 19, 204)
The labels shape for train is: (8119,)
The data shape for test is: (46010, 19, 19, 204)
The labels shape for test is: (46010,)
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv3d (Conv3D)              (None, 15, 15, 181, 32)   19232     
_________________________________________________________________
batch_normalization (BatchNo (None, 15, 15, 181, 32)   128       
_________________________________________________________________
activation (Activation)      (None, 15, 15, 181, 32)   0         
_________________________________________________________________
conv3d_1 (Conv3D)            (None, 11, 11, 166, 64)   819264    
_________________________________________________________________
batch_normalization_1 (Batch (None, 11, 11, 166, 64)   256       
_________________________________________________________________
activation_1 (Activation)    (None, 11, 11, 166, 64)   0         
_________________________________________________________________
max_pooling3d (MaxPooling3D) (None, 5, 5, 166, 64)     0         
_________________________________________________________________
flatten (Flatten)            (None, 265600)            0         
_________________________________________________________________
dense (Dense)                (None, 300)               79680300  
_________________________________________________________________
batch_normalization_2 (Batch (None, 300)               1200      
_________________________________________________________________
activation_2 (Activation)    (None, 300)               0         
_________________________________________________________________
dense_1 (Dense)              (None, 16)                4816      
=================================================================
Total params: 80,525,196
Trainable params: 80,524,404
Non-trainable params: 792
_________________________________________________________________
Epoch 1/40

Epoch 00001: val_accuracy improved from -inf to 0.32239, saving model to /tmp/best_model.h5
Epoch 2/40

Epoch 00002: val_accuracy improved from 0.32239 to 0.68644, saving model to /tmp/best_model.h5
Epoch 3/40

Epoch 00003: val_accuracy improved from 0.68644 to 0.89830, saving model to /tmp/best_model.h5
Epoch 4/40

Epoch 00004: val_accuracy improved from 0.89830 to 0.93332, saving model to /tmp/best_model.h5
Epoch 5/40

Epoch 00005: val_accuracy did not improve from 0.93332
Epoch 6/40

Epoch 00006: val_accuracy did not improve from 0.93332
Epoch 7/40

Epoch 00007: val_accuracy improved from 0.93332 to 0.97927, saving model to /tmp/best_model.h5
Epoch 8/40

Epoch 00008: val_accuracy improved from 0.97927 to 0.99259, saving model to /tmp/best_model.h5
Epoch 9/40

Epoch 00009: val_accuracy did not improve from 0.99259
Epoch 10/40

Epoch 00010: val_accuracy did not improve from 0.99259
Epoch 11/40

Epoch 00011: val_accuracy did not improve from 0.99259
Epoch 12/40

Epoch 00012: val_accuracy did not improve from 0.99259
Epoch 13/40

Epoch 00013: val_accuracy did not improve from 0.99259
Epoch 14/40

Epoch 00014: val_accuracy improved from 0.99259 to 0.99687, saving model to /tmp/best_model.h5
Epoch 15/40

Epoch 00015: val_accuracy did not improve from 0.99687
Epoch 16/40

Epoch 00016: val_accuracy did not improve from 0.99687
Epoch 17/40

Epoch 00017: val_accuracy did not improve from 0.99687
Epoch 18/40

Epoch 00018: val_accuracy did not improve from 0.99687
Epoch 19/40

Epoch 00019: val_accuracy did not improve from 0.99687
Epoch 20/40

Epoch 00020: val_accuracy improved from 0.99687 to 0.99876, saving model to /tmp/best_model.h5
Epoch 21/40

Epoch 00021: val_accuracy did not improve from 0.99876
Epoch 22/40

Epoch 00022: val_accuracy did not improve from 0.99876
Epoch 23/40

Epoch 00023: val_accuracy did not improve from 0.99876
Epoch 24/40

Epoch 00024: val_accuracy did not improve from 0.99876
Epoch 25/40

Epoch 00025: val_accuracy did not improve from 0.99876
Epoch 26/40

Epoch 00026: val_accuracy improved from 0.99876 to 0.99952, saving model to /tmp/best_model.h5
Epoch 27/40

Epoch 00027: val_accuracy did not improve from 0.99952
Epoch 28/40

Epoch 00028: val_accuracy did not improve from 0.99952
Epoch 29/40

Epoch 00029: val_accuracy did not improve from 0.99952
Epoch 30/40

Epoch 00030: val_accuracy did not improve from 0.99952
Epoch 31/40

Epoch 00031: val_accuracy did not improve from 0.99952
Epoch 32/40

Epoch 00032: val_accuracy did not improve from 0.99952
Epoch 33/40

Epoch 00033: val_accuracy did not improve from 0.99952
Epoch 34/40

Epoch 00034: val_accuracy did not improve from 0.99952
Epoch 35/40

Epoch 00035: val_accuracy improved from 0.99952 to 0.99957, saving model to /tmp/best_model.h5
Epoch 36/40

Epoch 00036: val_accuracy did not improve from 0.99957
Epoch 37/40

Epoch 00037: val_accuracy did not improve from 0.99957
Epoch 38/40

Epoch 00038: val_accuracy did not improve from 0.99957
Epoch 39/40

Epoch 00039: val_accuracy did not improve from 0.99957
Epoch 40/40

Epoch 00040: val_accuracy did not improve from 0.99957
PARAMETERS 80525196

Terminado en 9994.270737409592 segundos!


Classification report:
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      1708
           1       1.00      1.00      1.00      3167
           2       1.00      1.00      1.00      1680
           3       1.00      1.00      1.00      1185
           4       1.00      1.00      1.00      2276
           5       1.00      1.00      1.00      3365
           6       1.00      1.00      1.00      3042
           7       1.00      1.00      1.00      9580
           8       1.00      1.00      1.00      5273
           9       1.00      1.00      1.00      2786
          10       0.99      1.00      1.00       908
          11       1.00      1.00      1.00      1638
          12       1.00      1.00      1.00       779
          13       1.00      1.00      1.00       909
          14       1.00      1.00      1.00      6178
          15       1.00      1.00      1.00      1536

    accuracy                           1.00     46010
   macro avg       1.00      1.00      1.00     46010
weighted avg       1.00      1.00      1.00     46010

Accuracy Score: 0.9995653118887199
Accuracy by each class: [1.    1.    1.    1.    0.998 1.    1.    1.    1.    0.998 0.998 1.
 1.    1.    0.999 1.   ]
Average accuracy 0.9995355247279375
Cohenâ€™s kappa score:  0.9995159821360041
