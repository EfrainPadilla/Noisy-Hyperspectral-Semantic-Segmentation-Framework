WARNING:tensorflow:Callbacks method `on_train_batch_end` is slow compared to the batch time (batch time: 0.3170s vs `on_train_batch_end` time: 0.9941s). Check your callbacks.
2021-06-09 06:11:25.222785
SNR= 30dB
Alpha= alpha-1.0
---The HSI selected is: indianPines ---
The shape of the image is: (145, 145, 200)
The shape of the labels is: (145, 145)
Number of classes:  16
Standard Scaler preprocessing method applied
The new shape of the data is:  (21025, 19, 19, 200)
The new shape of the labels is:  (21025,)
The data shape for train is: (1537, 19, 19, 200)
The labels shape for train is: (1537,)
The data shape for test is: (8712, 19, 19, 200)
The labels shape for test is: (8712,)
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv3d (Conv3D)              (None, 15, 15, 177, 32)   19232     
_________________________________________________________________
batch_normalization (BatchNo (None, 15, 15, 177, 32)   128       
_________________________________________________________________
activation (Activation)      (None, 15, 15, 177, 32)   0         
_________________________________________________________________
conv3d_1 (Conv3D)            (None, 11, 11, 162, 64)   819264    
_________________________________________________________________
batch_normalization_1 (Batch (None, 11, 11, 162, 64)   256       
_________________________________________________________________
activation_1 (Activation)    (None, 11, 11, 162, 64)   0         
_________________________________________________________________
max_pooling3d (MaxPooling3D) (None, 5, 5, 162, 64)     0         
_________________________________________________________________
flatten (Flatten)            (None, 259200)            0         
_________________________________________________________________
dense (Dense)                (None, 300)               77760300  
_________________________________________________________________
batch_normalization_2 (Batch (None, 300)               1200      
_________________________________________________________________
activation_2 (Activation)    (None, 300)               0         
_________________________________________________________________
dense_1 (Dense)              (None, 16)                4816      
=================================================================
Total params: 78,605,196
Trainable params: 78,604,404
Non-trainable params: 792
_________________________________________________________________
Epoch 1/40

Epoch 00001: val_accuracy improved from -inf to 0.12385, saving model to /tmp/best_model.h5
Epoch 2/40

Epoch 00002: val_accuracy did not improve from 0.12385
Epoch 3/40

Epoch 00003: val_accuracy improved from 0.12385 to 0.12477, saving model to /tmp/best_model.h5
Epoch 4/40

Epoch 00004: val_accuracy improved from 0.12477 to 0.14210, saving model to /tmp/best_model.h5
Epoch 5/40

Epoch 00005: val_accuracy improved from 0.14210 to 0.17711, saving model to /tmp/best_model.h5
Epoch 6/40

Epoch 00006: val_accuracy improved from 0.17711 to 0.32323, saving model to /tmp/best_model.h5
Epoch 7/40

Epoch 00007: val_accuracy improved from 0.32323 to 0.36880, saving model to /tmp/best_model.h5
Epoch 8/40

Epoch 00008: val_accuracy did not improve from 0.36880
Epoch 9/40

Epoch 00009: val_accuracy improved from 0.36880 to 0.52697, saving model to /tmp/best_model.h5
Epoch 10/40

Epoch 00010: val_accuracy improved from 0.52697 to 0.63912, saving model to /tmp/best_model.h5
Epoch 11/40

Epoch 00011: val_accuracy improved from 0.63912 to 0.69789, saving model to /tmp/best_model.h5
Epoch 12/40

Epoch 00012: val_accuracy improved from 0.69789 to 0.75872, saving model to /tmp/best_model.h5
Epoch 13/40

Epoch 00013: val_accuracy improved from 0.75872 to 0.83586, saving model to /tmp/best_model.h5
Epoch 14/40

Epoch 00014: val_accuracy did not improve from 0.83586
Epoch 15/40

Epoch 00015: val_accuracy improved from 0.83586 to 0.90852, saving model to /tmp/best_model.h5
Epoch 16/40

Epoch 00016: val_accuracy improved from 0.90852 to 0.93756, saving model to /tmp/best_model.h5
Epoch 17/40

Epoch 00017: val_accuracy improved from 0.93756 to 0.96660, saving model to /tmp/best_model.h5
Epoch 18/40

Epoch 00018: val_accuracy did not improve from 0.96660
Epoch 19/40

Epoch 00019: val_accuracy improved from 0.96660 to 0.97073, saving model to /tmp/best_model.h5
Epoch 20/40

Epoch 00020: val_accuracy improved from 0.97073 to 0.97153, saving model to /tmp/best_model.h5
Epoch 21/40

Epoch 00021: val_accuracy improved from 0.97153 to 0.97440, saving model to /tmp/best_model.h5
Epoch 22/40

Epoch 00022: val_accuracy did not improve from 0.97440
Epoch 23/40

Epoch 00023: val_accuracy did not improve from 0.97440
Epoch 24/40

Epoch 00024: val_accuracy did not improve from 0.97440
Epoch 25/40

Epoch 00025: val_accuracy did not improve from 0.97440
Epoch 26/40

Epoch 00026: val_accuracy did not improve from 0.97440
Epoch 27/40

Epoch 00027: val_accuracy did not improve from 0.97440
Epoch 28/40

Epoch 00028: val_accuracy did not improve from 0.97440
Epoch 29/40

Epoch 00029: val_accuracy did not improve from 0.97440
Epoch 30/40

Epoch 00030: val_accuracy did not improve from 0.97440
Epoch 31/40

Epoch 00031: val_accuracy did not improve from 0.97440
Epoch 32/40

Epoch 00032: val_accuracy did not improve from 0.97440
Epoch 33/40

Epoch 00033: val_accuracy did not improve from 0.97440
Epoch 34/40

Epoch 00034: val_accuracy did not improve from 0.97440
Epoch 35/40

Epoch 00035: val_accuracy did not improve from 0.97440
Epoch 36/40

Epoch 00036: val_accuracy did not improve from 0.97440
Epoch 37/40

Epoch 00037: val_accuracy did not improve from 0.97440
Epoch 38/40

Epoch 00038: val_accuracy did not improve from 0.97440
Epoch 39/40

Epoch 00039: val_accuracy did not improve from 0.97440
Epoch 40/40

Epoch 00040: val_accuracy improved from 0.97440 to 0.97670, saving model to /tmp/best_model.h5
PARAMETERS 78605196

Terminado en 1889.0674707889557 segundos!


Classification report:
              precision    recall  f1-score   support

           0       1.00      0.92      0.96        39
           1       0.96      0.97      0.97      1214
           2       0.97      0.92      0.94       706
           3       0.99      0.95      0.97       201
           4       0.97      0.98      0.98       411
           5       1.00      0.99      0.99       621
           6       1.00      1.00      1.00        24
           7       0.99      1.00      1.00       406
           8       0.92      0.65      0.76        17
           9       0.99      0.96      0.97       826
          10       0.96      1.00      0.98      2087
          11       0.97      0.98      0.98       504
          12       1.00      0.99      1.00       174
          13       0.99      0.99      0.99      1075
          14       0.98      0.97      0.97       328
          15       1.00      0.94      0.97        79

    accuracy                           0.98      8712
   macro avg       0.98      0.95      0.96      8712
weighted avg       0.98      0.98      0.98      8712

Accuracy Score: 0.9766988062442608
Accuracy by each class: [0.923 0.971 0.916 0.95  0.981 0.99  1.    1.    0.647 0.956 0.999 0.984
 0.994 0.988 0.966 0.937]
Average accuracy 0.9502359681324013
Cohenâ€™s kappa score:  0.9733866786763512
